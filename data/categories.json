{"uid":"4b4757e66a1912dae1a509f688f20b0f","name":"categories","children":[{"name":"Product defects","children":[{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Book with empty values shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostBookAPITest.lambda$createBookTest$1(VerifyPostBookAPITest.java:39)","children":[{"name":"Verify that we can create a new book with Data","uid":"b52fc64acda8ecac","parentUid":"3370a7f4dd3188fd5fc8c86282e49c0d","status":"failed","time":{"start":1727800152973,"stop":1727800153462,"duration":489},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-01T16:29:10)","400","Book with empty values shouldn't be created"],"tags":[]},{"name":"Verify that we can create a new book with Data","uid":"cbe521244a444d14","parentUid":"3370a7f4dd3188fd5fc8c86282e49c0d","status":"failed","time":{"start":1727800320020,"stop":1727800320494,"duration":474},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-01T16:31:57)","400","Book with empty values shouldn't be created"],"tags":[]}],"uid":"3370a7f4dd3188fd5fc8c86282e49c0d"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Book with negative Id shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostBookAPITest.lambda$createBookTest$1(VerifyPostBookAPITest.java:39)","children":[{"name":"Verify that we can create a new book with Data","uid":"65c7c08fea283e1e","parentUid":"8ed27f214b949010e0aa50c6e49affd7","status":"failed","time":{"start":1727800154121,"stop":1727800154575,"duration":454},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=A Farewell to Arms, description=Deserunt consequatur odio rem., pageCount=207, excerpt=Eos laborum maiores qui., publishDate=2024-10-01T16:29:10)","400","Book with negative Id shouldn't be created"],"tags":[]},{"name":"Verify that we can create a new book with Data","uid":"984ec9bce776cd86","parentUid":"8ed27f214b949010e0aa50c6e49affd7","status":"failed","time":{"start":1727800321123,"stop":1727800321597,"duration":474},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=The Golden Bowl, description=Eos eligendi commodi tempora sapiente., pageCount=256, excerpt=Excepturi unde reprehenderit perspiciatis ullam nobis libero., publishDate=2024-10-01T16:31:57)","400","Book with negative Id shouldn't be created"],"tags":[]}],"uid":"8ed27f214b949010e0aa50c6e49affd7"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Book with negative Page Count shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostBookAPITest.lambda$createBookTest$1(VerifyPostBookAPITest.java:39)","children":[{"name":"Verify that we can create a new book with Data","uid":"6724ab0299ee65f9","parentUid":"80e7135b737a04fdf70f4064292977a9","status":"failed","time":{"start":1727800154578,"stop":1727800155042,"duration":464},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=578, title=Behold the Man, description=Totam enim ut dolorem deleniti autem., pageCount=-1, excerpt=Autem consequatur blanditiis et repellendus dignissimos excepturi., publishDate=2024-10-01T16:29:10)","400","Book with negative Page Count shouldn't be created"],"tags":[]},{"name":"Verify that we can create a new book with Data","uid":"c55fd1e406662ec7","parentUid":"80e7135b737a04fdf70f4064292977a9","status":"failed","time":{"start":1727800321600,"stop":1727800322039,"duration":439},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=579, title=Cover Her Face, description=Iste neque dolorem qui corrupti consequuntur est odit., pageCount=-1, excerpt=Reprehenderit cumque assumenda quia explicabo sint distinctio., publishDate=2024-10-01T16:31:57)","400","Book with negative Page Count shouldn't be created"],"tags":[]}],"uid":"80e7135b737a04fdf70f4064292977a9"},{"name":"Book with empty values shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing book","uid":"65046372ce868b50","parentUid":"284eaf1f54ab03c166819829e92cd423","status":"failed","time":{"start":1727800182612,"stop":1727800185337,"duration":2725},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-01T16:29:39)","400","Book with empty values shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing book","uid":"79319f6a6c72ec00","parentUid":"284eaf1f54ab03c166819829e92cd423","status":"failed","time":{"start":1727800350029,"stop":1727800352891,"duration":2862},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-01T16:32:27)","400","Book with empty values shouldn't be updated"],"tags":[]}],"uid":"284eaf1f54ab03c166819829e92cd423"},{"name":"Book with negative Id shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing book","uid":"fc40a3d5c5e47728","parentUid":"1b5867a212a17820a5873ac942dcd231","status":"failed","time":{"start":1727800187798,"stop":1727800190442,"duration":2644},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=The Heart Is Deceitful Above All Things, description=Qui vitae nemo aut., pageCount=412, excerpt=Mollitia sunt velit., publishDate=2024-10-01T16:29:39)","400","Book with negative Id shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing book","uid":"e9dd0ef055dca10e","parentUid":"1b5867a212a17820a5873ac942dcd231","status":"failed","time":{"start":1727800355422,"stop":1727800358072,"duration":2650},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=Ah, Wilderness!, description=Voluptas blanditiis sed et a est dolor a., pageCount=195, excerpt=Itaque ut et officia sit., publishDate=2024-10-01T16:32:27)","400","Book with negative Id shouldn't be updated"],"tags":[]}],"uid":"1b5867a212a17820a5873ac942dcd231"},{"name":"Book with negative Page Count shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing book","uid":"a589f72bfe01c5b9","parentUid":"a06ce7956868c32978db476adede7eb6","status":"failed","time":{"start":1727800190444,"stop":1727800193023,"duration":2579},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=690, title=The Stars' Tennis Balls, description=Et consequatur magni quos facilis., pageCount=-1, excerpt=Molestias sed distinctio et pariatur., publishDate=2024-10-01T16:29:39)","400","Book with negative Page Count shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing book","uid":"b7cf34a5274bfb48","parentUid":"a06ce7956868c32978db476adede7eb6","status":"failed","time":{"start":1727800358074,"stop":1727800360666,"duration":2592},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=522, title=A Time to Kill, description=Aut rerum eaque aliquid necessitatibus voluptatem., pageCount=-1, excerpt=Deserunt beatae totam iste., publishDate=2024-10-01T16:32:27)","400","Book with negative Page Count shouldn't be updated"],"tags":[]}],"uid":"a06ce7956868c32978db476adede7eb6"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with empty ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"316bf92d1d1a0c79","parentUid":"65fa78b39144a4ada83f643d5bc79964","status":"failed","time":{"start":1727800196876,"stop":1727800197311,"duration":435},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=6, firstName=Yessenia, lastName=White)","400","Author with empty ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"604a92863fee725b","parentUid":"65fa78b39144a4ada83f643d5bc79964","status":"failed","time":{"start":1727800364398,"stop":1727800364825,"duration":427},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=5, firstName=Margurite, lastName=Steuber)","400","Author with empty ID shouldn't be created"],"tags":[]}],"uid":"65fa78b39144a4ada83f643d5bc79964"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with empty Book ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"f4eeed3a915ad458","parentUid":"e9e27f9ce896036cfab8ae1ed0473865","status":"failed","time":{"start":1727800197313,"stop":1727800197756,"duration":443},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=653, idBook=0, firstName=Herschel, lastName=Dibbert)","400","Author with empty Book ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"9598ea4dfc6f4710","parentUid":"e9e27f9ce896036cfab8ae1ed0473865","status":"failed","time":{"start":1727800364826,"stop":1727800365266,"duration":440},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=557, idBook=0, firstName=Mary, lastName=Koelpin)","400","Author with empty Book ID shouldn't be created"],"tags":[]}],"uid":"e9e27f9ce896036cfab8ae1ed0473865"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with negative ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"fd3f57961bd9e9a4","parentUid":"5419c6a1b19b22305f90d28adedd7a3b","status":"failed","time":{"start":1727800197758,"stop":1727800198208,"duration":450},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=8, firstName=Dorris, lastName=Christiansen)","400","Author with negative ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"f30a3adf19ad373b","parentUid":"5419c6a1b19b22305f90d28adedd7a3b","status":"failed","time":{"start":1727800365268,"stop":1727800365713,"duration":445},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=4, firstName=Diedra, lastName=Kutch)","400","Author with negative ID shouldn't be created"],"tags":[]}],"uid":"5419c6a1b19b22305f90d28adedd7a3b"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with negative Book ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"4fb41292c3d322e","parentUid":"c3a1f4279175b6452cc4b08aff3c57d5","status":"failed","time":{"start":1727800198211,"stop":1727800198651,"duration":440},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=616, idBook=-1, firstName=Marlene, lastName=Wilkinson)","400","Author with negative Book ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"ec6bfc26778f93fb","parentUid":"c3a1f4279175b6452cc4b08aff3c57d5","status":"failed","time":{"start":1727800365715,"stop":1727800366150,"duration":435},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=542, idBook=-1, firstName=Renaldo, lastName=Feeney)","400","Author with negative Book ID shouldn't be created"],"tags":[]}],"uid":"c3a1f4279175b6452cc4b08aff3c57d5"},{"name":"Author with empty ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"9c5ca8a77c864f49","parentUid":"6e4a2787e8c4488bf832eff110764ff1","status":"failed","time":{"start":1727800245354,"stop":1727800251983,"duration":6629},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=4, firstName=Ernest, lastName=Hilpert)","400","Author with empty ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"733a53300c6fe77e","parentUid":"6e4a2787e8c4488bf832eff110764ff1","status":"failed","time":{"start":1727800411344,"stop":1727800418204,"duration":6860},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=7, firstName=Merle, lastName=King)","400","Author with empty ID shouldn't be updated"],"tags":[]}],"uid":"6e4a2787e8c4488bf832eff110764ff1"},{"name":"Author with empty Book ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"fcd6f358cd02b9dd","parentUid":"6c8c12fd6164dc235d43eca74f33905a","status":"failed","time":{"start":1727800251984,"stop":1727800259029,"duration":7045},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=696, idBook=0, firstName=Simon, lastName=Von)","400","Author with empty Book ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"afa6550d338ac417","parentUid":"6c8c12fd6164dc235d43eca74f33905a","status":"failed","time":{"start":1727800418206,"stop":1727800424968,"duration":6762},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=682, idBook=0, firstName=Rod, lastName=Schulist)","400","Author with empty Book ID shouldn't be updated"],"tags":[]}],"uid":"6c8c12fd6164dc235d43eca74f33905a"},{"name":"Author with negative ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"8e71e35be184a487","parentUid":"c8ce8265024a3ebe4420d86197f92a98","status":"failed","time":{"start":1727800259031,"stop":1727800265983,"duration":6952},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=7, firstName=Starla, lastName=Leuschke)","400","Author with negative ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"6af6c42fa42902e1","parentUid":"c8ce8265024a3ebe4420d86197f92a98","status":"failed","time":{"start":1727800424969,"stop":1727800431835,"duration":6866},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=1, firstName=Joesph, lastName=Kub)","400","Author with negative ID shouldn't be updated"],"tags":[]}],"uid":"c8ce8265024a3ebe4420d86197f92a98"},{"name":"Author with negative Book ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"c26e6dcb06b0d3d7","parentUid":"f272fa165a79ea7e933802110e90b2b9","status":"failed","time":{"start":1727800265985,"stop":1727800272621,"duration":6636},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=575, idBook=-1, firstName=Monte, lastName=Effertz)","400","Author with negative Book ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"94ea02b8ab383801","parentUid":"f272fa165a79ea7e933802110e90b2b9","status":"failed","time":{"start":1727800431836,"stop":1727800438690,"duration":6854},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=626, idBook=-1, firstName=Monty, lastName=Wisoky)","400","Author with negative Book ID shouldn't be updated"],"tags":[]}],"uid":"f272fa165a79ea7e933802110e90b2b9"},{"name":"Book should be deleted expected [204] but found [200]","children":[{"name":"Verify trying to delete a book after it has already been deleted","uid":"efada5a261017e53","parentUid":"2a9043e57177aea22f04fabe758903cb","status":"failed","time":{"start":1727800335201,"stop":1727800338392,"duration":3191},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"2a9043e57177aea22f04fabe758903cb"},{"name":"Cannot delete book with negative Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a book with negative id","uid":"7219909d272bac21","parentUid":"eada11eecbab43690d1986a248b378f0","status":"failed","time":{"start":1727800338394,"stop":1727800338818,"duration":424},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"eada11eecbab43690d1986a248b378f0"},{"name":"\nMultiple Failures (2 failures)\n-- failure 1 --\n[Code Status should be equal to: 404] \nexpected: 404\n but was: 200\nat VerifyDeleteBookAPITest.lambda$deleteExistingBookTest$0(VerifyDeleteBookAPITest.java:30)\n-- failure 2 --\n[Book should be deleted] \nexpected: \"Not Found\"\n but was: \"Book 102\"\nat VerifyDeleteBookAPITest.lambda$deleteExistingBookTest$0(VerifyDeleteBookAPITest.java:33)","children":[{"name":"Verify that we can delete an existing book","uid":"7c7abcfef3948ae6","parentUid":"1a95770023d5b7b7a85ee09fb3c3c543","status":"failed","time":{"start":1727800340316,"stop":1727800344156,"duration":3840},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"1a95770023d5b7b7a85ee09fb3c3c543"},{"name":"Cannot delete book with non-existent Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a non-existent book","uid":"2e689bfaf27ae826","parentUid":"67a458809384d4b7fa45ab751d62740e","status":"failed","time":{"start":1727800344159,"stop":1727800346755,"duration":2596},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"67a458809384d4b7fa45ab751d62740e"},{"name":"Cannot update book by negative Id expected [400] but found [200]","children":[{"name":"Verify updating a book by negative ID","uid":"8ff8f693e6355f7c","parentUid":"55634d9611c3a987f63e6eb9732264dc","status":"failed","time":{"start":1727800346757,"stop":1727800347209,"duration":452},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"55634d9611c3a987f63e6eb9732264dc"},{"name":"Book doesn't exist expected [404] but found [200]","children":[{"name":"Verify updating a non-existent book","uid":"1761cfd24ca14d4b","parentUid":"b4a6224ca59d54af07963b4492ef831c","status":"failed","time":{"start":1727800360668,"stop":1727800363360,"duration":2692},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"b4a6224ca59d54af07963b4492ef831c"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with empty values shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"5349df31f76eae6b","parentUid":"d74c92717ec3c0f9ae9c4d3da0e46204","status":"failed","time":{"start":1727800363946,"stop":1727800364396,"duration":450},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=0, firstName=null, lastName=null)","400","Author with empty values shouldn't be created"],"tags":[]}],"uid":"d74c92717ec3c0f9ae9c4d3da0e46204"},{"name":"\nMultiple Failures (2 failures)\n-- failure 1 --\n[Code Status should be equal to: 404] \nexpected: 404\n but was: 200\nat VerifyGetAuthorAPITest.lambda$getDeletedAuthor$10(VerifyGetAuthorAPITest.java:187)\n-- failure 2 --\n[Author should be deleted] \nexpected: \"Not Found\"\n but was: null\nat VerifyGetAuthorAPITest.lambda$getDeletedAuthor$10(VerifyGetAuthorAPITest.java:190)","children":[{"name":"Verify that we cannot get deleted author","uid":"297a54395181daf","parentUid":"002f473e7e90cfcfda738615c8f47f3f","status":"failed","time":{"start":1727800383441,"stop":1727800384731,"duration":1290},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"002f473e7e90cfcfda738615c8f47f3f"},{"name":"Cannot update author by negative Id expected [400] but found [200]","children":[{"name":"Verify updating a author by negative ID","uid":"dec350c17593ef3f","parentUid":"d224f289a8893664c1d486844ae7c764","status":"failed","time":{"start":1727800397416,"stop":1727800397852,"duration":436},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d224f289a8893664c1d486844ae7c764"},{"name":"Author with empty values shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"313646b80c8f6d95","parentUid":"a80397cd680a3d8c3846f121931ad39e","status":"failed","time":{"start":1727800404746,"stop":1727800411341,"duration":6595},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=0, firstName=null, lastName=null)","400","Author with empty values shouldn't be updated"],"tags":[]}],"uid":"a80397cd680a3d8c3846f121931ad39e"},{"name":"Author doesn't exist expected [404] but found [200]","children":[{"name":"Verify updating a non-existent author","uid":"6f496648af665ced","parentUid":"a032517df060fd60f900c990f7591823","status":"failed","time":{"start":1727800438692,"stop":1727800445345,"duration":6653},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"a032517df060fd60f900c990f7591823"},{"name":"Cannot delete author with negative Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a author with negative id","uid":"90e875daaf13d295","parentUid":"4980178a54c9663521aca707d35885cc","status":"failed","time":{"start":1727800452342,"stop":1727800452752,"duration":410},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"4980178a54c9663521aca707d35885cc"},{"name":"\nMultiple Failures (2 failures)\n-- failure 1 --\n[Code Status should be equal to: 404] \nexpected: 404\n but was: 200\nat VerifyDeleteAuthorAPITest.lambda$deleteCreatedAuthorTest$1(VerifyDeleteAuthorAPITest.java:54)\n-- failure 2 --\n[Author should be deleted] \nexpected: \"Not Found\"\n but was: null\nat VerifyDeleteAuthorAPITest.lambda$deleteCreatedAuthorTest$1(VerifyDeleteAuthorAPITest.java:57)","children":[{"name":"Verify that we can delete an created author","uid":"a39ca429119b81d2","parentUid":"52074c71f423fbd9438cd62e6af3093f","status":"failed","time":{"start":1727800452753,"stop":1727800454048,"duration":1295},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":true,"parameters":[],"tags":[]}],"uid":"52074c71f423fbd9438cd62e6af3093f"},{"name":"\nMultiple Failures (2 failures)\n-- failure 1 --\n[Code Status should be equal to: 404] \nexpected: 404\n but was: 200\nat VerifyDeleteAuthorAPITest.lambda$deleteExistingAuthorTest$0(VerifyDeleteAuthorAPITest.java:30)\n-- failure 2 --\n[Author should be deleted] \nexpected: \"Not Found\"\n but was: null\nat VerifyDeleteAuthorAPITest.lambda$deleteExistingAuthorTest$0(VerifyDeleteAuthorAPITest.java:33)","children":[{"name":"Verify that we can delete an existing author","uid":"7dd59f0ca377ea96","parentUid":"73d888308bcf147d02c56cfa9feda61b","status":"failed","time":{"start":1727800454050,"stop":1727800461828,"duration":7778},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"73d888308bcf147d02c56cfa9feda61b"},{"name":"Cannot delete author with non-existent Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a non-existent author","uid":"a8cad91e5b76f156","parentUid":"3e522ede7434154f8f6c4a4f1bf5fed4","status":"failed","time":{"start":1727800461831,"stop":1727800468576,"duration":6745},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"3e522ede7434154f8f6c4a4f1bf5fed4"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"type\" (class models.Author), not marked as ignorable (4 known properties: \"lastName\", \"id\", \"idBook\", \"firstName\"])\n at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 10] (through reference chain: models.Author[\"type\"])","children":[{"name":"Verify trying to delete a author after it has already been deleted","uid":"d3435f52cfc22d19","parentUid":"00e1b936c22abba4e6a4237001a1d043","status":"broken","time":{"start":1727800445346,"stop":1727800452341,"duration":6995},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":true,"parameters":[],"tags":[]}],"uid":"00e1b936c22abba4e6a4237001a1d043"}],"uid":"bdbf199525818fae7a8651db9eafe741"}]}