{"uid":"4b4757e66a1912dae1a509f688f20b0f","name":"categories","children":[{"name":"Product defects","children":[{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Book with empty values shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostBookAPITest.lambda$createBookTest$1(VerifyPostBookAPITest.java:39)","children":[{"name":"Verify that we can create a new book with Data","uid":"fda426d59b1cd995","parentUid":"3370a7f4dd3188fd5fc8c86282e49c0d","status":"failed","time":{"start":1727852418033,"stop":1727852418407,"duration":374},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-02T07:00:15)","400","Book with empty values shouldn't be created"],"tags":[]},{"name":"Verify that we can create a new book with Data","uid":"d847a9d3b668f51f","parentUid":"3370a7f4dd3188fd5fc8c86282e49c0d","status":"failed","time":{"start":1727852569266,"stop":1727852569641,"duration":375},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-02T07:02:46)","400","Book with empty values shouldn't be created"],"tags":[]}],"uid":"3370a7f4dd3188fd5fc8c86282e49c0d"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Book with negative Id shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostBookAPITest.lambda$createBookTest$1(VerifyPostBookAPITest.java:39)","children":[{"name":"Verify that we can create a new book with Data","uid":"794255146bfcf6be","parentUid":"8ed27f214b949010e0aa50c6e49affd7","status":"failed","time":{"start":1727852418963,"stop":1727852419317,"duration":354},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=Specimen Days, description=Assumenda voluptatem dolorum et iste., pageCount=198, excerpt=Recusandae aut dignissimos qui., publishDate=2024-10-02T07:00:15)","400","Book with negative Id shouldn't be created"],"tags":[]},{"name":"Verify that we can create a new book with Data","uid":"58368721a787359a","parentUid":"8ed27f214b949010e0aa50c6e49affd7","status":"failed","time":{"start":1727852570213,"stop":1727852570567,"duration":354},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=Consider the Lilies, description=Illum ratione maxime in., pageCount=324, excerpt=Eius laboriosam reprehenderit., publishDate=2024-10-02T07:02:46)","400","Book with negative Id shouldn't be created"],"tags":[]}],"uid":"8ed27f214b949010e0aa50c6e49affd7"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Book with negative Page Count shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostBookAPITest.lambda$createBookTest$1(VerifyPostBookAPITest.java:39)","children":[{"name":"Verify that we can create a new book with Data","uid":"8dce92f49a01a08d","parentUid":"80e7135b737a04fdf70f4064292977a9","status":"failed","time":{"start":1727852419320,"stop":1727852419666,"duration":346},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=601, title=Unweaving the Rainbow, description=Dolorem dolores inventore consequuntur odio facere reprehenderit., pageCount=-1, excerpt=Ut enim sed tempore vel., publishDate=2024-10-02T07:00:15)","400","Book with negative Page Count shouldn't be created"],"tags":[]},{"name":"Verify that we can create a new book with Data","uid":"711adee978c05097","parentUid":"80e7135b737a04fdf70f4064292977a9","status":"failed","time":{"start":1727852570570,"stop":1727852570923,"duration":353},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=654, title=Rosemary Sutcliff, description=Impedit rerum tempore unde maxime fuga quas cum., pageCount=-1, excerpt=Voluptatem qui sed aut., publishDate=2024-10-02T07:02:46)","400","Book with negative Page Count shouldn't be created"],"tags":[]}],"uid":"80e7135b737a04fdf70f4064292977a9"},{"name":"Book with empty values shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing book","uid":"4c5e272a17d53743","parentUid":"284eaf1f54ab03c166819829e92cd423","status":"failed","time":{"start":1727852442690,"stop":1727852445209,"duration":2519},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-02T07:00:40)","400","Book with empty values shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing book","uid":"40528f66ed89ae32","parentUid":"284eaf1f54ab03c166819829e92cd423","status":"failed","time":{"start":1727852593586,"stop":1727852595852,"duration":2266},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-02T07:03:11)","400","Book with empty values shouldn't be updated"],"tags":[]}],"uid":"284eaf1f54ab03c166819829e92cd423"},{"name":"Book with negative Id shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing book","uid":"491d8d0e17727f5","parentUid":"1b5867a212a17820a5873ac942dcd231","status":"failed","time":{"start":1727852447668,"stop":1727852449869,"duration":2201},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=To Say Nothing of the Dog, description=Aut in debitis molestias., pageCount=323, excerpt=Explicabo numquam architecto possimus harum., publishDate=2024-10-02T07:00:40)","400","Book with negative Id shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing book","uid":"5622850d52ed9d8d","parentUid":"1b5867a212a17820a5873ac942dcd231","status":"failed","time":{"start":1727852598056,"stop":1727852600312,"duration":2256},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=Shall not Perish, description=Magni officia omnis voluptatem vel inventore quis., pageCount=304, excerpt=Repellat quibusdam qui consequatur magnam quia., publishDate=2024-10-02T07:03:11)","400","Book with negative Id shouldn't be updated"],"tags":[]}],"uid":"1b5867a212a17820a5873ac942dcd231"},{"name":"Book with negative Page Count shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing book","uid":"ad5c7abb723eabd","parentUid":"a06ce7956868c32978db476adede7eb6","status":"failed","time":{"start":1727852449871,"stop":1727852451872,"duration":2001},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=538, title=A Passage to India, description=Aspernatur est et rerum voluptatem nobis reprehenderit temporibus., pageCount=-1, excerpt=Asperiores eos et eaque praesentium., publishDate=2024-10-02T07:00:40)","400","Book with negative Page Count shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing book","uid":"432066c2767f7675","parentUid":"a06ce7956868c32978db476adede7eb6","status":"failed","time":{"start":1727852600314,"stop":1727852602342,"duration":2028},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=581, title=Sleep the Brave, description=Itaque laborum officiis adipisci et nisi., pageCount=-1, excerpt=Accusamus quis voluptatum rerum a aspernatur ea et., publishDate=2024-10-02T07:03:11)","400","Book with negative Page Count shouldn't be updated"],"tags":[]}],"uid":"a06ce7956868c32978db476adede7eb6"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with empty ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"fe5f41bff5762265","parentUid":"65fa78b39144a4ada83f643d5bc79964","status":"failed","time":{"start":1727852454827,"stop":1727852455170,"duration":343},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=8, firstName=Rob, lastName=Hodkiewicz)","400","Author with empty ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"71013dca7ed00146","parentUid":"65fa78b39144a4ada83f643d5bc79964","status":"failed","time":{"start":1727852605539,"stop":1727852605882,"duration":343},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=6, firstName=Asa, lastName=Douglas)","400","Author with empty ID shouldn't be created"],"tags":[]}],"uid":"65fa78b39144a4ada83f643d5bc79964"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with empty Book ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"1d9509e447d1356c","parentUid":"e9e27f9ce896036cfab8ae1ed0473865","status":"failed","time":{"start":1727852455172,"stop":1727852455513,"duration":341},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=637, idBook=0, firstName=Christinia, lastName=Reichert)","400","Author with empty Book ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"5bac316e5da98162","parentUid":"e9e27f9ce896036cfab8ae1ed0473865","status":"failed","time":{"start":1727852605883,"stop":1727852606215,"duration":332},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=541, idBook=0, firstName=Irwin, lastName=Ernser)","400","Author with empty Book ID shouldn't be created"],"tags":[]}],"uid":"e9e27f9ce896036cfab8ae1ed0473865"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with negative ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"e5d7c149364339e9","parentUid":"5419c6a1b19b22305f90d28adedd7a3b","status":"failed","time":{"start":1727852455515,"stop":1727852455849,"duration":334},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=7, firstName=Galen, lastName=Brakus)","400","Author with negative ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"d1c52f35b9960044","parentUid":"5419c6a1b19b22305f90d28adedd7a3b","status":"failed","time":{"start":1727852606217,"stop":1727852606560,"duration":343},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=2, firstName=Isiah, lastName=Russel)","400","Author with negative ID shouldn't be created"],"tags":[]}],"uid":"5419c6a1b19b22305f90d28adedd7a3b"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with negative Book ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"a16b9502686f88f2","parentUid":"c3a1f4279175b6452cc4b08aff3c57d5","status":"failed","time":{"start":1727852455850,"stop":1727852456189,"duration":339},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=618, idBook=-1, firstName=Antonia, lastName=Kassulke)","400","Author with negative Book ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"52d21e67e91eff7a","parentUid":"c3a1f4279175b6452cc4b08aff3c57d5","status":"failed","time":{"start":1727852606562,"stop":1727852606891,"duration":329},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=687, idBook=-1, firstName=Aiko, lastName=Hessel)","400","Author with negative Book ID shouldn't be created"],"tags":[]}],"uid":"c3a1f4279175b6452cc4b08aff3c57d5"},{"name":"Author with empty ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"e6090c33508540df","parentUid":"6e4a2787e8c4488bf832eff110764ff1","status":"failed","time":{"start":1727852500364,"stop":1727852507190,"duration":6826},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=4, firstName=Dara, lastName=Bernier)","400","Author with empty ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"6b59e96fd0939979","parentUid":"6e4a2787e8c4488bf832eff110764ff1","status":"failed","time":{"start":1727852650466,"stop":1727852657022,"duration":6556},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=2, firstName=David, lastName=Hyatt)","400","Author with empty ID shouldn't be updated"],"tags":[]}],"uid":"6e4a2787e8c4488bf832eff110764ff1"},{"name":"Author with empty Book ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"83c3821cf8f7184f","parentUid":"6c8c12fd6164dc235d43eca74f33905a","status":"failed","time":{"start":1727852507191,"stop":1727852513841,"duration":6650},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=653, idBook=0, firstName=Rafael, lastName=Dickinson)","400","Author with empty Book ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"4c04e8cfc432dedc","parentUid":"6c8c12fd6164dc235d43eca74f33905a","status":"failed","time":{"start":1727852657023,"stop":1727852663512,"duration":6489},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=594, idBook=0, firstName=Gary, lastName=Collier)","400","Author with empty Book ID shouldn't be updated"],"tags":[]}],"uid":"6c8c12fd6164dc235d43eca74f33905a"},{"name":"Author with negative ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"668a9a2f1786a894","parentUid":"c8ce8265024a3ebe4420d86197f92a98","status":"failed","time":{"start":1727852513843,"stop":1727852520541,"duration":6698},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=8, firstName=Daryl, lastName=Haley)","400","Author with negative ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"13f7883dee653556","parentUid":"c8ce8265024a3ebe4420d86197f92a98","status":"failed","time":{"start":1727852663514,"stop":1727852670088,"duration":6574},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=6, firstName=Chester, lastName=Beier)","400","Author with negative ID shouldn't be updated"],"tags":[]}],"uid":"c8ce8265024a3ebe4420d86197f92a98"},{"name":"Author with negative Book ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"b3bad4ba6a05ec70","parentUid":"f272fa165a79ea7e933802110e90b2b9","status":"failed","time":{"start":1727852520542,"stop":1727852527383,"duration":6841},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=639, idBook=-1, firstName=Kenneth, lastName=Thiel)","400","Author with negative Book ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"6612a24388a8453","parentUid":"f272fa165a79ea7e933802110e90b2b9","status":"failed","time":{"start":1727852670090,"stop":1727852676732,"duration":6642},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=628, idBook=-1, firstName=Kala, lastName=Witting)","400","Author with negative Book ID shouldn't be updated"],"tags":[]}],"uid":"f272fa165a79ea7e933802110e90b2b9"},{"name":"Book should be deleted expected [204] but found [200]","children":[{"name":"Verify trying to delete a book after it has already been deleted","uid":"8254754a87945769","parentUid":"2a9043e57177aea22f04fabe758903cb","status":"failed","time":{"start":1727852581920,"stop":1727852584624,"duration":2704},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"2a9043e57177aea22f04fabe758903cb"},{"name":"Cannot delete book with negative Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a book with negative id","uid":"85f7440dff3f162c","parentUid":"eada11eecbab43690d1986a248b378f0","status":"failed","time":{"start":1727852584625,"stop":1727852584940,"duration":315},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"eada11eecbab43690d1986a248b378f0"},{"name":"\nMultiple Failures (2 failures)\n-- failure 1 --\n[Code Status should be equal to: 404] \nexpected: 404\n but was: 200\nat VerifyDeleteBookAPITest.lambda$deleteExistingBookTest$0(VerifyDeleteBookAPITest.java:30)\n-- failure 2 --\n[Book should be deleted] \nexpected: \"Not Found\"\n but was: \"Book 105\"\nat VerifyDeleteBookAPITest.lambda$deleteExistingBookTest$0(VerifyDeleteBookAPITest.java:33)","children":[{"name":"Verify that we can delete an existing book","uid":"f6ad058411f3fa79","parentUid":"08ef8a3205f9cc419265a3fc0aabcf74","status":"failed","time":{"start":1727852585996,"stop":1727852588755,"duration":2759},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"08ef8a3205f9cc419265a3fc0aabcf74"},{"name":"Cannot delete book with non-existent Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a non-existent book","uid":"778ab8976068b6aa","parentUid":"67a458809384d4b7fa45ab751d62740e","status":"failed","time":{"start":1727852588758,"stop":1727852591112,"duration":2354},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"67a458809384d4b7fa45ab751d62740e"},{"name":"Cannot update book by negative Id expected [400] but found [200]","children":[{"name":"Verify updating a book by negative ID","uid":"483a4899201c13cd","parentUid":"55634d9611c3a987f63e6eb9732264dc","status":"failed","time":{"start":1727852591114,"stop":1727852591440,"duration":326},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"55634d9611c3a987f63e6eb9732264dc"},{"name":"Book doesn't exist expected [404] but found [200]","children":[{"name":"Verify updating a non-existent book","uid":"1346a6e4c8a1f3a","parentUid":"b4a6224ca59d54af07963b4492ef831c","status":"failed","time":{"start":1727852602344,"stop":1727852604673,"duration":2329},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"b4a6224ca59d54af07963b4492ef831c"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with empty values shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"a8b02e253dc27308","parentUid":"d74c92717ec3c0f9ae9c4d3da0e46204","status":"failed","time":{"start":1727852605184,"stop":1727852605537,"duration":353},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=0, firstName=null, lastName=null)","400","Author with empty values shouldn't be created"],"tags":[]}],"uid":"d74c92717ec3c0f9ae9c4d3da0e46204"},{"name":"\nMultiple Failures (2 failures)\n-- failure 1 --\n[Code Status should be equal to: 404] \nexpected: 404\n but was: 200\nat VerifyGetAuthorAPITest.lambda$getDeletedAuthor$10(VerifyGetAuthorAPITest.java:187)\n-- failure 2 --\n[Author should be deleted] \nexpected: \"Not Found\"\n but was: null\nat VerifyGetAuthorAPITest.lambda$getDeletedAuthor$10(VerifyGetAuthorAPITest.java:190)","children":[{"name":"Verify that we cannot get deleted author","uid":"e129c470e12ce862","parentUid":"002f473e7e90cfcfda738615c8f47f3f","status":"failed","time":{"start":1727852623357,"stop":1727852624364,"duration":1007},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"002f473e7e90cfcfda738615c8f47f3f"},{"name":"Cannot update author by negative Id expected [400] but found [200]","children":[{"name":"Verify updating a author by negative ID","uid":"e83b9de72282433e","parentUid":"d224f289a8893664c1d486844ae7c764","status":"failed","time":{"start":1727852636870,"stop":1727852637206,"duration":336},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d224f289a8893664c1d486844ae7c764"},{"name":"Author with empty values shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"25fc152fe103651c","parentUid":"a80397cd680a3d8c3846f121931ad39e","status":"failed","time":{"start":1727852643883,"stop":1727852650464,"duration":6581},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=0, firstName=null, lastName=null)","400","Author with empty values shouldn't be updated"],"tags":[]}],"uid":"a80397cd680a3d8c3846f121931ad39e"},{"name":"Author doesn't exist expected [404] but found [200]","children":[{"name":"Verify updating a non-existent author","uid":"845e20a1810a6ebe","parentUid":"a032517df060fd60f900c990f7591823","status":"failed","time":{"start":1727852676734,"stop":1727852683240,"duration":6506},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"a032517df060fd60f900c990f7591823"},{"name":"Author should be deleted expected [204] but found [200]","children":[{"name":"Verify trying to delete a author after it has already been deleted","uid":"74c5dea5d1de0271","parentUid":"207ffbd3a7044bd433a867543991917b","status":"failed","time":{"start":1727852683242,"stop":1727852690262,"duration":7020},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"207ffbd3a7044bd433a867543991917b"},{"name":"Cannot delete author with negative Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a author with negative id","uid":"1e75f586d077da04","parentUid":"4980178a54c9663521aca707d35885cc","status":"failed","time":{"start":1727852690264,"stop":1727852690583,"duration":319},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"4980178a54c9663521aca707d35885cc"},{"name":"\nMultiple Failures (2 failures)\n-- failure 1 --\n[Code Status should be equal to: 404] \nexpected: 404\n but was: 200\nat VerifyDeleteAuthorAPITest.lambda$deleteExistingAuthorTest$0(VerifyDeleteAuthorAPITest.java:30)\n-- failure 2 --\n[Author should be deleted] \nexpected: \"Not Found\"\n but was: null\nat VerifyDeleteAuthorAPITest.lambda$deleteExistingAuthorTest$0(VerifyDeleteAuthorAPITest.java:33)","children":[{"name":"Verify that we can delete an existing author","uid":"e56508b917e37263","parentUid":"73d888308bcf147d02c56cfa9feda61b","status":"failed","time":{"start":1727852691602,"stop":1727852698704,"duration":7102},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"73d888308bcf147d02c56cfa9feda61b"},{"name":"Cannot delete author with non-existent Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a non-existent author","uid":"f3a356d14e64586a","parentUid":"3e522ede7434154f8f6c4a4f1bf5fed4","status":"failed","time":{"start":1727852698706,"stop":1727852705180,"duration":6474},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"3e522ede7434154f8f6c4a4f1bf5fed4"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}]}