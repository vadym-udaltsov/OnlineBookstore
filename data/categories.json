{"uid":"4b4757e66a1912dae1a509f688f20b0f","name":"categories","children":[{"name":"Product defects","children":[{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Book with empty values shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostBookAPITest.lambda$createBookTest$1(VerifyPostBookAPITest.java:39)","children":[{"name":"Verify that we can create a new book with Data","uid":"87ff4c2dfff0be89","parentUid":"3370a7f4dd3188fd5fc8c86282e49c0d","status":"failed","time":{"start":1727800596279,"stop":1727800596798,"duration":519},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-01T16:36:33)","400","Book with empty values shouldn't be created"],"tags":[]},{"name":"Verify that we can create a new book with Data","uid":"e508efa15364eccd","parentUid":"3370a7f4dd3188fd5fc8c86282e49c0d","status":"failed","time":{"start":1727800764408,"stop":1727800764932,"duration":524},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-01T16:39:21)","400","Book with empty values shouldn't be created"],"tags":[]}],"uid":"3370a7f4dd3188fd5fc8c86282e49c0d"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Book with negative Id shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostBookAPITest.lambda$createBookTest$1(VerifyPostBookAPITest.java:39)","children":[{"name":"Verify that we can create a new book with Data","uid":"eca5117a0b0c745d","parentUid":"8ed27f214b949010e0aa50c6e49affd7","status":"failed","time":{"start":1727800597507,"stop":1727800598017,"duration":510},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=Now Sleeps the Crimson Petal, description=Et consequuntur tempora ipsam ab., pageCount=400, excerpt=Ut sequi autem vitae dolores dolorem animi molestiae., publishDate=2024-10-01T16:36:33)","400","Book with negative Id shouldn't be created"],"tags":[]},{"name":"Verify that we can create a new book with Data","uid":"4110f9bc0dcc3da","parentUid":"8ed27f214b949010e0aa50c6e49affd7","status":"failed","time":{"start":1727800765615,"stop":1727800766138,"duration":523},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=As I Lay Dying, description=Itaque ipsa quo., pageCount=200, excerpt=Laborum laudantium debitis ratione occaecati eius iure., publishDate=2024-10-01T16:39:21)","400","Book with negative Id shouldn't be created"],"tags":[]}],"uid":"8ed27f214b949010e0aa50c6e49affd7"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Book with negative Page Count shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostBookAPITest.lambda$createBookTest$1(VerifyPostBookAPITest.java:39)","children":[{"name":"Verify that we can create a new book with Data","uid":"75d71897e4fce68d","parentUid":"80e7135b737a04fdf70f4064292977a9","status":"failed","time":{"start":1727800598020,"stop":1727800598530,"duration":510},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=656, title=The World, the Flesh and the Devil, description=Sit ut hic., pageCount=-1, excerpt=Est quia autem blanditiis totam aut., publishDate=2024-10-01T16:36:33)","400","Book with negative Page Count shouldn't be created"],"tags":[]},{"name":"Verify that we can create a new book with Data","uid":"29111798e99522","parentUid":"80e7135b737a04fdf70f4064292977a9","status":"failed","time":{"start":1727800766141,"stop":1727800766651,"duration":510},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=550, title=Number the Stars, description=Consectetur esse quos et., pageCount=-1, excerpt=Nulla unde vero in adipisci tenetur corrupti quos., publishDate=2024-10-01T16:39:21)","400","Book with negative Page Count shouldn't be created"],"tags":[]}],"uid":"80e7135b737a04fdf70f4064292977a9"},{"name":"Book with empty values shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing book","uid":"f0734798d7cc7032","parentUid":"284eaf1f54ab03c166819829e92cd423","status":"failed","time":{"start":1727800628300,"stop":1727800631360,"duration":3060},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-01T16:37:05)","400","Book with empty values shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing book","uid":"8d92b5695eee9f7a","parentUid":"284eaf1f54ab03c166819829e92cd423","status":"failed","time":{"start":1727800795983,"stop":1727800798855,"duration":2872},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=0, title=null, description=null, pageCount=0, excerpt=null, publishDate=2024-10-01T16:39:52)","400","Book with empty values shouldn't be updated"],"tags":[]}],"uid":"284eaf1f54ab03c166819829e92cd423"},{"name":"Book with negative Id shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing book","uid":"13f1c6bc47584b75","parentUid":"1b5867a212a17820a5873ac942dcd231","status":"failed","time":{"start":1727800634209,"stop":1727800637917,"duration":3708},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=A Many-Splendoured Thing, description=Mollitia sint quasi repellendus., pageCount=261, excerpt=Sit voluptatum neque et fugit quasi non., publishDate=2024-10-01T16:37:05)","400","Book with negative Id shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing book","uid":"2e82dd63949aee15","parentUid":"1b5867a212a17820a5873ac942dcd231","status":"failed","time":{"start":1727800801624,"stop":1727800804488,"duration":2864},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=-1, title=The Wind's Twelve Quarters, description=In dolorem id molestiae., pageCount=232, excerpt=Expedita sint natus omnis ut., publishDate=2024-10-01T16:39:52)","400","Book with negative Id shouldn't be updated"],"tags":[]}],"uid":"1b5867a212a17820a5873ac942dcd231"},{"name":"Book with negative Page Count shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing book","uid":"ef74333bf2254f9c","parentUid":"a06ce7956868c32978db476adede7eb6","status":"failed","time":{"start":1727800637919,"stop":1727800640839,"duration":2920},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=620, title=The Stars' Tennis Balls, description=Sed harum quaerat quis voluptatem ea., pageCount=-1, excerpt=Rerum porro voluptatem voluptatum cupiditate excepturi voluptatem., publishDate=2024-10-01T16:37:05)","400","Book with negative Page Count shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing book","uid":"4f3d696c1deb067a","parentUid":"a06ce7956868c32978db476adede7eb6","status":"failed","time":{"start":1727800804489,"stop":1727800807309,"duration":2820},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Book(id=629, title=To a God Unknown, description=Laborum non dolor recusandae placeat eos amet enim., pageCount=-1, excerpt=Voluptatem assumenda ea in in soluta., publishDate=2024-10-01T16:39:52)","400","Book with negative Page Count shouldn't be updated"],"tags":[]}],"uid":"a06ce7956868c32978db476adede7eb6"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with empty ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"fec1fe48e32e5982","parentUid":"65fa78b39144a4ada83f643d5bc79964","status":"failed","time":{"start":1727800645001,"stop":1727800645508,"duration":507},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=9, firstName=Buddy, lastName=Daniel)","400","Author with empty ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"c26d1a7d8c843fce","parentUid":"65fa78b39144a4ada83f643d5bc79964","status":"failed","time":{"start":1727800811328,"stop":1727800811817,"duration":489},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=6, firstName=Frankie, lastName=Wisoky)","400","Author with empty ID shouldn't be created"],"tags":[]}],"uid":"65fa78b39144a4ada83f643d5bc79964"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with empty Book ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"7880fff704e68459","parentUid":"e9e27f9ce896036cfab8ae1ed0473865","status":"failed","time":{"start":1727800645510,"stop":1727800645991,"duration":481},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=677, idBook=0, firstName=Yasuko, lastName=Rowe)","400","Author with empty Book ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"705344daf4eca906","parentUid":"e9e27f9ce896036cfab8ae1ed0473865","status":"failed","time":{"start":1727800811819,"stop":1727800812319,"duration":500},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=619, idBook=0, firstName=Mario, lastName=Lubowitz)","400","Author with empty Book ID shouldn't be created"],"tags":[]}],"uid":"e9e27f9ce896036cfab8ae1ed0473865"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with negative ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"c27cb3205567120d","parentUid":"5419c6a1b19b22305f90d28adedd7a3b","status":"failed","time":{"start":1727800645993,"stop":1727800646474,"duration":481},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=1, firstName=Rickie, lastName=McKenzie)","400","Author with negative ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"490c6fb9fc0349bd","parentUid":"5419c6a1b19b22305f90d28adedd7a3b","status":"failed","time":{"start":1727800812321,"stop":1727800812810,"duration":489},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=3, firstName=Patricia, lastName=Sanford)","400","Author with negative ID shouldn't be created"],"tags":[]}],"uid":"5419c6a1b19b22305f90d28adedd7a3b"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with negative Book ID shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"b59f2087754751c6","parentUid":"c3a1f4279175b6452cc4b08aff3c57d5","status":"failed","time":{"start":1727800646476,"stop":1727800646956,"duration":480},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=522, idBook=-1, firstName=Eleanore, lastName=Nitzsche)","400","Author with negative Book ID shouldn't be created"],"tags":[]},{"name":"Verify that we can add a new author","uid":"b8c123e2bbf6d47d","parentUid":"c3a1f4279175b6452cc4b08aff3c57d5","status":"failed","time":{"start":1727800812812,"stop":1727800813296,"duration":484},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=593, idBook=-1, firstName=Noriko, lastName=Rutherford)","400","Author with negative Book ID shouldn't be created"],"tags":[]}],"uid":"c3a1f4279175b6452cc4b08aff3c57d5"},{"name":"Author with empty ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"927e751a645dd84d","parentUid":"6e4a2787e8c4488bf832eff110764ff1","status":"failed","time":{"start":1727800693799,"stop":1727800700750,"duration":6951},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=9, firstName=Jacques, lastName=Johns)","400","Author with empty ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"b02363a216168d39","parentUid":"6e4a2787e8c4488bf832eff110764ff1","status":"failed","time":{"start":1727800860066,"stop":1727800866972,"duration":6906},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=1, firstName=Rick, lastName=Thiel)","400","Author with empty ID shouldn't be updated"],"tags":[]}],"uid":"6e4a2787e8c4488bf832eff110764ff1"},{"name":"Author with empty Book ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"e103e05a913460ac","parentUid":"6c8c12fd6164dc235d43eca74f33905a","status":"failed","time":{"start":1727800700752,"stop":1727800707603,"duration":6851},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=588, idBook=0, firstName=Perry, lastName=Gislason)","400","Author with empty Book ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"8730dcc760550524","parentUid":"6c8c12fd6164dc235d43eca74f33905a","status":"failed","time":{"start":1727800866974,"stop":1727800873897,"duration":6923},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=634, idBook=0, firstName=Maida, lastName=Johnston)","400","Author with empty Book ID shouldn't be updated"],"tags":[]}],"uid":"6c8c12fd6164dc235d43eca74f33905a"},{"name":"Author with negative ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"3f853981d856b79d","parentUid":"c8ce8265024a3ebe4420d86197f92a98","status":"failed","time":{"start":1727800707605,"stop":1727800714582,"duration":6977},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=7, firstName=Fabiola, lastName=Davis)","400","Author with negative ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"7dbdbd7fff7280d1","parentUid":"c8ce8265024a3ebe4420d86197f92a98","status":"failed","time":{"start":1727800873899,"stop":1727800880862,"duration":6963},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=-1, idBook=7, firstName=Shawn, lastName=Schaden)","400","Author with negative ID shouldn't be updated"],"tags":[]}],"uid":"c8ce8265024a3ebe4420d86197f92a98"},{"name":"Author with negative Book ID shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"2d6379fa97da9a01","parentUid":"f272fa165a79ea7e933802110e90b2b9","status":"failed","time":{"start":1727800714584,"stop":1727800721184,"duration":6600},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=574, idBook=-1, firstName=Erich, lastName=Boyle)","400","Author with negative Book ID shouldn't be updated"],"tags":[]},{"name":"Verify that we can update an existing author","uid":"594d1d1a1887a642","parentUid":"f272fa165a79ea7e933802110e90b2b9","status":"failed","time":{"start":1727800880864,"stop":1727800887721,"duration":6857},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["Author(id=693, idBook=-1, firstName=Devon, lastName=Marquardt)","400","Author with negative Book ID shouldn't be updated"],"tags":[]}],"uid":"f272fa165a79ea7e933802110e90b2b9"},{"name":"Book should be deleted expected [204] but found [200]","children":[{"name":"Verify trying to delete a book after it has already been deleted","uid":"ac73e53b785a0edb","parentUid":"2a9043e57177aea22f04fabe758903cb","status":"failed","time":{"start":1727800780003,"stop":1727800783491,"duration":3488},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"2a9043e57177aea22f04fabe758903cb"},{"name":"Cannot delete book with negative Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a book with negative id","uid":"79db1b5a6d85a01f","parentUid":"eada11eecbab43690d1986a248b378f0","status":"failed","time":{"start":1727800783493,"stop":1727800783965,"duration":472},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"eada11eecbab43690d1986a248b378f0"},{"name":"\nMultiple Failures (2 failures)\n-- failure 1 --\n[Code Status should be equal to: 404] \nexpected: 404\n but was: 200\nat VerifyDeleteBookAPITest.lambda$deleteExistingBookTest$0(VerifyDeleteBookAPITest.java:30)\n-- failure 2 --\n[Book should be deleted] \nexpected: \"Not Found\"\n but was: \"Book 90\"\nat VerifyDeleteBookAPITest.lambda$deleteExistingBookTest$0(VerifyDeleteBookAPITest.java:33)","children":[{"name":"Verify that we can delete an existing book","uid":"56c54523bf86b6f5","parentUid":"07aa9e26faa043c1564b1c2dd7e8df47","status":"failed","time":{"start":1727800785493,"stop":1727800789450,"duration":3957},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"07aa9e26faa043c1564b1c2dd7e8df47"},{"name":"Cannot delete book with non-existent Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a non-existent book","uid":"e5c4bd0c31dba265","parentUid":"67a458809384d4b7fa45ab751d62740e","status":"failed","time":{"start":1727800789453,"stop":1727800792468,"duration":3015},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"67a458809384d4b7fa45ab751d62740e"},{"name":"Cannot update book by negative Id expected [400] but found [200]","children":[{"name":"Verify updating a book by negative ID","uid":"8de1e3642f73442c","parentUid":"55634d9611c3a987f63e6eb9732264dc","status":"failed","time":{"start":1727800792470,"stop":1727800792947,"duration":477},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"55634d9611c3a987f63e6eb9732264dc"},{"name":"Book doesn't exist expected [404] but found [200]","children":[{"name":"Verify updating a non-existent book","uid":"acb6ab9ada2ac63d","parentUid":"b4a6224ca59d54af07963b4492ef831c","status":"failed","time":{"start":1727800807311,"stop":1727800810223,"duration":2912},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"b4a6224ca59d54af07963b4492ef831c"},{"name":"\nMultiple Failures (1 failure)\n-- failure 1 --\n[Author with empty values shouldn't be created] \nexpected: 400\n but was: 200\nat VerifyPostAuthorAPITest.lambda$createAuthorTest$0(VerifyPostAuthorAPITest.java:20)","children":[{"name":"Verify that we can add a new author","uid":"4e476999ebfab8f8","parentUid":"d74c92717ec3c0f9ae9c4d3da0e46204","status":"failed","time":{"start":1727800810830,"stop":1727800811327,"duration":497},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=0, firstName=null, lastName=null)","400","Author with empty values shouldn't be created"],"tags":[]}],"uid":"d74c92717ec3c0f9ae9c4d3da0e46204"},{"name":"Cannot update author by negative Id expected [400] but found [200]","children":[{"name":"Verify updating a author by negative ID","uid":"904440ee14657f00","parentUid":"d224f289a8893664c1d486844ae7c764","status":"failed","time":{"start":1727800845539,"stop":1727800846048,"duration":509},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d224f289a8893664c1d486844ae7c764"},{"name":"Author with empty values shouldn't be updated expected [400] but found [200]","children":[{"name":"Verify that we can update an existing author","uid":"fb4ca38725bd7bb9","parentUid":"a80397cd680a3d8c3846f121931ad39e","status":"failed","time":{"start":1727800853119,"stop":1727800860064,"duration":6945},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["Author(id=0, idBook=0, firstName=null, lastName=null)","400","Author with empty values shouldn't be updated"],"tags":[]}],"uid":"a80397cd680a3d8c3846f121931ad39e"},{"name":"Author doesn't exist expected [404] but found [200]","children":[{"name":"Verify updating a non-existent author","uid":"86efe4ba63fd62d5","parentUid":"a032517df060fd60f900c990f7591823","status":"failed","time":{"start":1727800887723,"stop":1727800894641,"duration":6918},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"a032517df060fd60f900c990f7591823"},{"name":"Author should be deleted expected [204] but found [200]","children":[{"name":"Verify trying to delete a author after it has already been deleted","uid":"95d06d3fed5b96c6","parentUid":"207ffbd3a7044bd433a867543991917b","status":"failed","time":{"start":1727800894643,"stop":1727800902155,"duration":7512},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"207ffbd3a7044bd433a867543991917b"},{"name":"Cannot delete author with negative Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a author with negative id","uid":"419b684cabe20c29","parentUid":"4980178a54c9663521aca707d35885cc","status":"failed","time":{"start":1727800902157,"stop":1727800902639,"duration":482},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"4980178a54c9663521aca707d35885cc"},{"name":"\nMultiple Failures (2 failures)\n-- failure 1 --\n[Code Status should be equal to: 404] \nexpected: 404\n but was: 200\nat VerifyDeleteAuthorAPITest.lambda$deleteExistingAuthorTest$0(VerifyDeleteAuthorAPITest.java:30)\n-- failure 2 --\n[Author should be deleted] \nexpected: \"Not Found\"\n but was: null\nat VerifyDeleteAuthorAPITest.lambda$deleteExistingAuthorTest$0(VerifyDeleteAuthorAPITest.java:33)","children":[{"name":"Verify that we can delete an existing author","uid":"3b333ba42239fa12","parentUid":"73d888308bcf147d02c56cfa9feda61b","status":"failed","time":{"start":1727800904125,"stop":1727800911837,"duration":7712},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"73d888308bcf147d02c56cfa9feda61b"},{"name":"Cannot delete author with non-existent Id expected [404] but found [200]","children":[{"name":"Verify trying to delete a non-existent author","uid":"347b486eab9916bc","parentUid":"3e522ede7434154f8f6c4a4f1bf5fed4","status":"failed","time":{"start":1727800911839,"stop":1727800918648,"duration":6809},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"3e522ede7434154f8f6c4a4f1bf5fed4"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}]}